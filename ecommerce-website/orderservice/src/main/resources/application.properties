# Application Name
spring.application.name=orderservice

# Server Configuration
server.port=8083
server.address=0.0.0.0

# Database Configuration (MySQL)
spring.datasource.url=jdbc:mysql://mysql:3306/orderservice_db
spring.datasource.username=${MYSQL_DB_USER}
spring.datasource.password=${MYSQL_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging
logging.level.org.springframework=INFO
logging.level.com.ecommerce.orderservice=DEBUG
logging.level.org.springframework.web=DEBUG

management.endpoints.web.exposure.include=*

# Redis Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.timeout=60000
spring.cache.type=redis
# spring.redis.serializer=jackson

# WebClient Base URLs (Docker service names, not localhost!)
productservice.base-url=http://productservice:8081
cartservice.base-url=http://cartservice:8084
paymentservice.base-url=http://paymentservice:8082
userservice.base-url=http://userservice:8080

# Kafka Configuration
spring.kafka.bootstrap-servers=kafka:9092

# Producer Configuration
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer Configuration
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Kafka Deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.ecommerce.orderservice.dtos.PaymentEvent

# Consumer Group
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
