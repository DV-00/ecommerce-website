spring.application.name=notificationservice
server.port=8085

# Kafka Consumer Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=notification-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Use ErrorHandlingDeserializer with JsonDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Ensure Kafka Consumer trusts Order Service, Notification Service, and Payment Service packages for deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ecommerce.orderservice.dtos,com.ecommerce.notificationservice,com.ecommerce.paymentservice.dtos

# Map the producer's types to the consumer's types:
spring.kafka.consumer.properties.spring.json.type.mapping=com.ecommerce.orderservice.dtos.OrderEvent:com.ecommerce.notificationservice.dtos.NotificationOrderEvent,com.ecommerce.paymentservice.dtos.PaymentEvent:com.ecommerce.notificationservice.dtos.NotificationPaymentEvent
