# Application Configuration
spring.application.name=paymentservice
server.port=8082
paymentservice.base-url=http://localhost:8082


# Database Configuration (MySQL)
spring.datasource.url=jdbc:mysql://localhost:3306/paymentservice_db
spring.datasource.username=root
spring.datasource.password=Dipak@1991
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# JPA & Hibernate Config
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Logging Configuration
logging.level.org.springframework=INFO
logging.level.com.ecommerce.paymentservice=DEBUG

management.endpoints.web.exposure.include=*

# Redis Configuration
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=60000
spring.cache.type=redis
spring.redis.serializer=jackson

# WebClient Configuration
spring.webclient.connect-timeout=5000
spring.webclient.read-timeout=10000

# Microservices Base URLs
orderservice.base-url=http://localhost:8083
cartservice.base-url=http://localhost:8084
userservice.base-url=http://localhost:8080
productservice.base-url=http://localhost:8081

paymentservice.gateway.base-url=https://dummy-payment.com

# Kafka Configuration (For Payment Events)
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=payment-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.listener.missing-topics-fatal=false

# Producer Settings
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Consumer Settings
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.ecommerce.paymentservice.dtos.OrderEvent

# Kafka Topics
kafka.topic.payment-status=payment-events

spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
